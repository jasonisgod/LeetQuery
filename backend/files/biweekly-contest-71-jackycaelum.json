{
    "rank": 7749,
    "username": "jackycaelum",
    "score": 7,
    "finish_time": "00:50:48",
    "Q1": {
        "solve_time": "00:45:48",
        "fail_count": 1,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    int minimumSum(int num) {\n        vector<int> digit;\n        int dig = num;\n        \n        int size = 0;\n        while (dig)\n        {\n            digit.push_back(dig % 10);\n            size++;\n            dig /= 10;\n        }\n        sort(digit.begin(), digit.end());\n              \n        int power = 0;  \n        int ans = 0, i = 0;\n        for (i = size-1; i >= 0; i-=2)\n        {\n            ans += (digit[i]+digit[i-1]) * pow(10, power);\n            power++;\n        }\n        \n        if (i == 0)\n            ans += digit[0] * pow(10, power);\n        \n        return ans;\n    }\n};"
    },
    "Q2": {
        "solve_time": "00:22:37",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    vector<int> pivotArray(vector<int>& nums, int pivot) {\n        int size = nums.size();\n        \n        vector<int> ans(nums.size(), 0);\n        \n        int a = 0;\n        for (int i=0; i<nums.size(); i++)\n        {\n            if (nums[i] < pivot)\n            {\n                ans[a] = nums[i];\n                a++;\n            }\n        }\n        \n        for (int i=0; i<nums.size(); i++)\n        {\n            if (nums[i] == pivot)\n            {\n                ans[a] = nums[i];\n                a++;\n            }\n        }\n        \n        for (int i=0; i<nums.size(); i++)\n        {\n            if (nums[i] > pivot)\n            {\n                ans[a] = nums[i];\n                a++;\n            }\n        }\n        \n        return ans;\n    }\n};"
    },
    "Q3": {},
    "Q4": {}
}
