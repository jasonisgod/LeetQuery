{
    "rank": 5041,
    "username": "qm4zirQ15o",
    "score": 8,
    "finish_time": "00:55:25",
    "Q1": {
        "solve_time": "00:03:43",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    int minBitFlips(int start, int goal) {\n        int diff = start ^ goal, count = 0;\n        \n        while(diff > 0) {\n            count += diff & 1;\n            diff = diff >> 1;\n        }\n        \n        return count;\n    }\n};"
    },
    "Q2": {},
    "Q3": {
        "solve_time": "00:50:25",
        "fail_count": 1,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    long long numberOfWays(string s) {\n        vector<vector<long long>> arr;\n        \n        char pre = s[0];\n        int times = 1;\n        for (int i = 1; i < s.size(); i++) {\n            if (s[i] == pre) {\n                times++;\n            }\n            else {\n                vector<long long> temp = {pre - '0', times};\n                arr.push_back(temp);\n                pre = s[i];\n                times = 1;\n            }\n            \n            if (i == s.size() - 1) {\n                vector<long long> temp = {pre - '0', times};\n                arr.push_back(temp);\n            }\n        }\n        if (arr.size() < 3)\n            return 0;\n        \n        long long num[2] = {0};\n        for (int i = arr.size() - 1; i >= 0; i--) {\n            num[ arr[i][0] ] += arr[i][1];\n            arr[i].push_back(num[arr[i][0]]);\n        }\n        \n        num[0] = 0; num[1] = 0;\n        arr[arr.size()-1].push_back(0);\n        for (int i = arr.size() - 2; i >= 0; i--) {\n            num[ (arr[i][0]) ] += arr[i][1] * arr[i+1][2];\n            arr[i].push_back(num[arr[i][0]]);\n        }\n        \n        long long ans = 0;\n        for (int i = 0; i < arr.size() - 2; i++) {\n            ans += arr[i][1] * arr[i+1][3];\n        }\n        \n        return ans;\n    }\n};"
    },
    "Q4": {}
}
