{
    "rank": 7229,
    "username": "mian5102",
    "score": 7,
    "finish_time": "00:39:40",
    "Q1": {
        "solve_time": "00:23:04",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    int divisorSubstrings(int num, int k) {\n        int ans = 0;\n        string number = to_string(num);\n        int l = 0;\n        while (l <= number.length()-k) {\n            string tmp = number.substr(l, k);\n            int d = stoi(tmp);\n            if (d != 0 and num % d == 0)\n                ans++;\n            l++;\n        }\n        return ans;\n    }\n};"
    },
    "Q2": {
        "solve_time": "00:34:40",
        "fail_count": 1,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    int waysToSplitArray(vector<int>& nums) {\n        int ans = 0;\n        vector<long long int> prefix(nums.size(), 0);\n        vector<long long int> suffix(nums.size(), 0);\n        long long int p = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            p += nums[i];\n            prefix[i] = p;\n        }\n        long long int s = 0;\n        for (int i = nums.size()-1; i > 0; i--) {\n            s += nums[i];\n            suffix[i-1] = s;\n        }\n        for (int i = 0; i < nums.size() - 1; i++) {\n            if (prefix[i] >= suffix[i])\n                ans ++;\n            // cout << prefix[i] << \" \" << suffix[i] << endl;\n        }\n        \n        \n        \n        return ans;\n    }\n};"
    },
    "Q3": {},
    "Q4": {}
}
