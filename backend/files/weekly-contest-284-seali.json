{
    "rank": 3488,
    "username": "seali",
    "score": 8,
    "finish_time": "00:44:36",
    "Q1": {
        "solve_time": "00:07:18",
        "fail_count": 2,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    vector<int> findKDistantIndices(vector<int>& nums, int key, int k) {\n        \n        int size = nums.size();\n        \n        unordered_set<int> set;\n        \n        for(int i = 0 ; i < size; i++) {\n            \n            if (nums[i] == key) {\n                for(int j = i-k; j<size && j<=i+k ; j++) {\n                    if (j<0)\n                        continue;\n                    set.insert(j);\n                }\n            }\n        }\n        vector<int> output;\n        for (auto element:set)\n            output.push_back(element);\n        sort(output.begin(), output.end());\n        \n        return output;\n    }\n};"
    },
    "Q2": {},
    "Q3": {
        "solve_time": "00:29:36",
        "fail_count": 1,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n\n    int maximumTop(vector<int>& nums, int k) {\n        \n        if (nums.size() == 1) {\n            \n            return k%2?  -1 : nums[0]; \n            \n        }\n        \n        \n        vector<int> tmp;\n        \n        int size = nums.size();\n        \n        for(int i = 0 ; i < k-1 && i < size; i++)\n            tmp.push_back(nums[i]);\n        \n        if ( size > k)\n            tmp.push_back(nums[k]);\n            \n        \n        sort(tmp.begin(), tmp.end());\n        \n        return tmp.size()? tmp[tmp.size()-1] : -1;\n        \n        \n    }\n};"
    },
    "Q4": {}
}
