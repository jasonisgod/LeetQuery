{
    "rank": 9834,
    "username": "jasonisgod",
    "score": 7,
    "finish_time": "00:27:35",
    "Q1": {
        "solve_time": "00:17:56",
        "fail_count": 0,
        "lang": "python3",
        "code": "class Solution:\n    def bestHand(self, ranks: List[int], suits: List[str]) -> str:\n        if suits.count(suits[0]) == 5:\n            return 'Flush'\n        if any([ranks.count(i) >= 3 for i in ranks]):\n            return 'Three of a Kind'\n        if any([ranks.count(i) == 2 for i in ranks]):\n            return 'Pair'\n        return 'High Card'"
    },
    "Q2": {
        "solve_time": "00:27:35",
        "fail_count": 0,
        "lang": "python3",
        "code": "class Solution:\n    def zeroFilledSubarray(self, nums: List[int]) -> int:\n        head = -1\n        nums = [-1] + nums + [-1]\n        ans = 0\n        for i in range(len(nums)-1):\n            if nums[i-1] != 0 and nums[i] == 0:\n                head = i\n            if nums[i] == 0 and nums[i+1] != 0:\n                tail = i\n                count = tail - head + 1\n                # print(head, tail, count)\n                head = -1\n                ans += ((count+1)*count) // 2\n        return ans"
    },
    "Q3": {},
    "Q4": {}
}
