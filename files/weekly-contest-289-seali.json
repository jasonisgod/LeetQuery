{
    "rank": 4176,
    "username": "seali",
    "score": 7,
    "finish_time": "00:22:42",
    "Q1": {
        "solve_time": "00:22:42",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\nprivate:\n    string transfer(string& s, int k) {\n        \n        int size = s.size();\n        \n        if (size <= k)\n            return s;\n\n        string output;\n        int tmp = 0;\n        int count = 0;\n        for(int i = 0 ; i < size; i++) {\n            tmp += s[i] - '0';\n            count ++;\n            if (count == k || i == size-1) {\n                output += std::to_string(tmp);\n                tmp = 0;\n                count = 0;\n            }\n        }\n        \n        return output;\n        \n    }\npublic:\n    string digitSum(string s, int k) {\n        \n        while(s.size() > k) {\n            s = transfer(s, k);\n        }\n        \n        return s;\n        \n    }\n};"
    },
    "Q2": {
        "solve_time": "00:07:45",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\nprivate:\n    unordered_map<int, int> count;\npublic:\n    int minimumRounds(vector<int>& tasks) {\n        \n        for(auto& task : tasks)\n            count[task] ++;\n        \n        int output = 0;\n        \n        for(auto iter = count.begin(); iter != count.end(); iter++) {\n            if (iter->second == 1)\n                return -1;\n            \n            output += iter->second%3? iter->second/3+1 : iter->second/3;\n                \n        }\n        \n        return output;\n    }\n};"
    },
    "Q3": {},
    "Q4": {}
}
