{
    "rank": 5170,
    "username": "seali",
    "score": 7,
    "finish_time": "00:24:35",
    "Q1": {
        "solve_time": "00:19:35",
        "fail_count": 0,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    int divisorSubstrings(int num, int k) {\n        \n        string s = std::to_string(num);\n        \n        if (k > s.size())\n            return 0;\n        \n        int output = 0;\n        \n        for(int i = 0; i < s.size(); i++) {\n            if (i+k-1 == s.size())\n                break;\n            string tmp = s.substr(i,k);\n            int t = std::stoi(tmp);\n            if (!t)\n                continue;\n            if (num % t == 0)\n                output ++;\n        }\n        \n        return output;\n        \n        \n    }\n};"
    },
    "Q2": {
        "solve_time": "00:06:40",
        "fail_count": 1,
        "lang": "cpp",
        "code": "class Solution {\npublic:\n    int waysToSplitArray(vector<int>& nums) {\n        \n        int size = nums.size();\n        \n        vector<long long> front(size);\n        \n        for(int i = 0; i < size; i++) {\n            if (!i)\n                front[i] = nums[i];\n            else\n                front[i] = front[i-1] + nums[i];\n        }\n        \n        vector<long long> back(size);\n        \n        for(int i = size-1; i >= 0; i--) {\n            if (i == size-1)\n                back[i] = 0;\n            else \n                back[i] = back[i+1] + nums[i+1];\n        }\n        \n        int count = 0;\n        \n        for(int i = 0; i < size-1; i++) {\n            if (front[i] >= back[i] )\n                count ++;\n        }\n        \n        return count;\n        \n    }\n};"
    },
    "Q3": {},
    "Q4": {}
}
